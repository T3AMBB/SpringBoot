[스프링 부트]
 빈(Bean) 설정 XML xxx -> @ O
 빈 등록을 위한 설정파일(.xml)이 불필요해지므로
	자바 코드만 보고서도 전체내용 파악가능
 라이브러리 관리 pom.xml xxx -> 그레이들(GRADLE) O
				그레이들 사용시 .xml 대신 간단한 설정파일을 사용할수있게됨
 외부 와스 없이 내장된 톰캣 서버 사용 가능
 스프링 라이브러리 관리를 위한 자동설정 제공(스프링 부트 스타터)
 과도한 xml 설정 xxx

[스프링 부트 설치]
 이클립스에 추가 설치
  or
 사이트에서 직접 설치
	https://spring.io/tools
	.jar 다운로드 확인
	cmd로 .jar(==.zip) 압축해제
	java -jar spring...TAB
	sts-4.16.0.RELEASE에서 .exe 실행

[Spring Starter Project 설정]
Name		
Type		라이브러리 관리 도구
Packaging	내장 WAS인 톰캣 서버 사용시 War 사용
Java Version	11이상
Group		
Package		

=> 'Spring Web' Dependencies 주입

내장된 톰캣 서버의 기본 포트 번호는 8080
	오라클과 함께 사용하면 충돌 발생
 -> application.properties

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

[의존 주입]
 1) new를 직접 수행해서 바로 사용
	: 강한 결합
 2) 미리 만들어진 객체를 할당받아서 사용 => DI
	객체를 생성해주고 라이프사이클을 관리하고
	의존 주입을 해주는 친구 == 컨테이너
		: IoC
	: 약한 결합 -> 유지보수 용이

IoC와 AOP를 지원하는 경량의 프레임워크인 SpringFramwork
낮은 결합도, 높은 응집도 = 유지보수 용이


[의존 주입 방법]
 1) .xml
 2) 자바 코드 작성
 3) @
	@SpringBootApplication
		Bean(객체)들을 생성할때, 싱글톤을 유지할 수 있도록 설정 및 관리
		각각의 객체들이 생성되면 용이한 순간을 추측하여 메모리를 관리
		.jar 파일들도 생성 및 설정 관리
		@ 지정된 클래스를 스캔해서 Bean 등록 관리

Tip01	@Override
Tip02	ApplicationContext ac=new AnnotationConfigApplicationContext(?);
		=> 디자인 패턴 중 하나의 예시


-----------------------------------------

어떤 객체가 어떤 단계에서 생성되었고 참조,호출 되었는지 위주로 예제를 공부하면 도움이 됨





















